package com.ton.ecorp.controller;

import com.ton.ecorp.Entity.UserRepository;
import com.ton.ecorp.Entity.Users;
import com.ton.ecorp.service.BxService;
import com.ton.ecorp.service.MessageService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.apache.log4j.Logger;

@RestController
@RequestMapping(path="/api")
public class UserController {

    private static Logger logger = Logger.getLogger(AlertController.class);
    @Autowired
    private BxService bxService;
    @Autowired
    private MessageService messageService;

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;








    @RequestMapping(path = "/addusers" ,
            method = RequestMethod.POST)
    public @ResponseBody
    String addNewUser(@RequestParam String username
            , @RequestParam String password
            , @RequestParam String line_token
            , @RequestParam String pattern
    ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        if(userRepository.exists(username))
        {return "Username : " + username + " ถูุกใช้แล้ว";}
        Users user = new Users();
        user.setUsername(username);
        user.setPassword(password);
        user.setLine_token(line_token);
        user.setPattern(pattern);
        userRepository.save(user);
        return "Saved";
    }

    @RequestMapping(path = "/getusersall" ,
            method = RequestMethod.POST)
    public @ResponseBody
    Iterable<Users> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @RequestMapping(path = "/getusers",
            method = RequestMethod.POST)
    public @ResponseBody
    Users getUsers(String username) {
        return userRepository.findOne(username);
    }

}
